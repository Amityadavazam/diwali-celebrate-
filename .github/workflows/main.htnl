Source code for Tic tac Toe Game project 




HTML




<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Happy Diwali Wishes</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <header>
            <h1>Happy Diwali Wishes!</h1>
            <p>Share your love and joy this Diwali with beautiful wishes.</p>
        </header>

        <section class="wishes">
            <h2>Wishes</h2>
            <ul id="wishList">
                <!-- Wishes will be added here dynamically -->
            </ul>
        </section>

        <section class="add-wish">
            <h2>Add Your Wish</h2>
            <input type="text" id="wishInput" placeholder="Type your wish here...">
            <button onclick="addWish()">Add Wish</button>
        </section>
    </div>

    <script src="script.js"></script>
</body>
</html>




CSS




*{
    margin: 0;
    padding: 0;
}
body{
    background-color: thistle;
    text-align: center; /*alings horizontal text in centre*/ 

}
.hide{
    display: none;
}
.msgcontainer{
    font-size: 6vmin;
   height: 15vmin;
    color: rgb(9, 44, 84);
   
}
.container{
    background-color: rgb(206, 161, 206);
    height: 70vh;
    display: flex;
    justify-content: center;
    align-items: center;
}
.game{display: flex;
    flex-wrap: wrap;
    height: 60vmin ;
    width: 60vmin ;
   justify-content: center;
   align-items: center;
   gap: 1.5vmin;
}
.box{
    height: 18vmin;
    width: 18vmin ;
    border-radius: 1.5rem;
    border: none;
    box-shadow: 0 0 0.3rem rgb(106, 44, 169) ;
    font-size: 8vmin;
    background-color: rgb(35, 33, 33) ;

}
#reset{
    padding: 1rem ;
    background-color: rgb(35, 33, 33);
    color: #ffffff;
    font-size: 22px;
    border: none;
    border-radius: 15px;
}
#new{
    padding: 1rem ;
    background-color: rgb(35, 33, 33);
    color: #ffffff;
    font-size: 22px;
    border: none;
    border-radius: 15px;
}




JAVASCRIPT 





let boxes=document.querySelectorAll(".box");
let resetbtn=document.querySelector("#reset");
let newgmbtn=document.querySelector("#new");
let msgcontainer=document.querySelector(".msgcontainer");
let msg=document.querySelector("#msg");
let turn1=true;
const winningPatterns=[
[0,1,2],
[0,3,6],
[0,4,8],
[1,4,7],
[2,5,8],
[2,4,6],
[3,4,5],
[6,7,8]
];

boxes.forEach( (box)=>{
    box.addEventListener("click",()=>{

if(turn1==true){
box.innerText="O"; 
box.style.color="yellow";
turn1=false;
}
else{
    box.innerText="X";
    box.style.color="red";
    
turn1=true;

}
box.disabled=true;

checkwinner();


});

});
const resetgame =()=>{
        enablebox();
        turn1=true;
        msgcontainer.classList.add("hide");
        
};

const enablebox=()=>{
    for(let box of boxes){ 
        box.disabled=false;
        box.innerText="";
    }
};

const disablebox=()=>{
    for(let box of boxes){ 
        box.disabled=true;
    }
};

const showwinnner=(winner)=>{
    msg.innerText=congratulation winner is ${winner};
    msgcontainer.classList.remove("hide");
    disablebox();

};


const checkwinner= ()=>{
    for(let pattern of winningPatterns ){
        

            let pos1val = boxes[pattern[0]].innerText ;
            let pos2val = boxes[pattern[1]].innerText ;
            let pos3val = boxes[pattern[2]].innerText ;
        if(pos1val != "" && pos2val != "" && pos3val != ""){

            if(pos1val==pos2val && pos2val==pos3val){
             
                showwinnner(pos1val);
                
                }
            }

        } 
    }
};
 
newgmbtn.addEventListener("click",resetgame);
resetbtn.addEventListener("click",resetgame);
